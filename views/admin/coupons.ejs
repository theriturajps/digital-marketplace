<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title><%= title %> | Admin</title>
  
  <!-- Font Awesome -->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
  
  <!-- Google Fonts -->
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
  
  <!-- Tailwind CSS -->
  <script src="https://cdn.tailwindcss.com"></script>
  <script>
    tailwind.config = {
      theme: {
        extend: {
          fontFamily: {
            sans: ['Inter', 'sans-serif'],
          },
        },
      },
    }
  </script>
  
  <style>
    body {
      font-family: 'Inter', sans-serif;
      background-color: #f9fafb;
    }
  </style>
</head>
<body class="flex flex-col min-h-screen">
  <div class="flex min-h-screen">
    <!-- Sidebar -->
    <%- include('partials/sidebar') %>
    
    <!-- Main Content -->
    <div class="flex-1 flex flex-col overflow-hidden">
      <!-- Header -->
      <%- include('partials/header') %>
      
      <!-- Main -->
      <main class="flex-1 overflow-x-hidden overflow-y-auto bg-gray-100 p-4">
        <div class="container mx-auto px-4 py-4">
          <div class="flex justify-between items-center mb-6">
            <h1 class="text-2xl font-semibold">Manage Coupons</h1>
            <button 
              onclick="openNewCouponModal()" 
              class="bg-indigo-600 hover:bg-indigo-700 text-white font-medium py-2 px-4 rounded-lg transition duration-200"
            >
              <i class="fas fa-plus mr-2"></i> Add New Coupon
            </button>
          </div>
          
          <!-- Coupons Table -->
          <div class="bg-white rounded-lg shadow-sm overflow-hidden">
            <div class="overflow-x-auto">
              <table class="min-w-full divide-y divide-gray-200">
                <thead class="bg-gray-50">
                  <tr>
                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                      Code
                    </th>
                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                      Type
                    </th>
                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                      Value
                    </th>
                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                      Usage
                    </th>
                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                      Validity
                    </th>
                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                      Status
                    </th>
                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                      Actions
                    </th>
                  </tr>
                </thead>
                <tbody class="bg-white divide-y divide-gray-200">
                  <% if (coupons && coupons.length > 0) { %>
                    <% coupons.forEach(coupon => { %>
                      <tr>
                        <td class="px-6 py-4 whitespace-nowrap">
                          <div class="text-sm font-medium text-gray-900">
                            <%= coupon.code %>
                          </div>
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap">
                          <span class="px-2 py-1 text-xs rounded-full <%= coupon.type === 'percentage' ? 'bg-blue-100 text-blue-800' : 'bg-green-100 text-green-800' %>">
                            <%= coupon.type === 'percentage' ? 'Percentage' : 'Fixed Amount' %>
                          </span>
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap">
                          <div class="text-sm text-gray-900">
                            <%= coupon.type === 'percentage' ? `${coupon.value}%` : `₹${coupon.value}` %>
                            <% if (coupon.type === 'percentage' && coupon.maxDiscount) { %>
                              <span class="text-xs text-gray-500">(Max: ₹<%= coupon.maxDiscount %>)</span>
                            <% } %>
                          </div>
                          <% if (coupon.minPurchase > 0) { %>
                            <div class="text-xs text-gray-500">
                              Min: ₹<%= coupon.minPurchase %>
                            </div>
                          <% } %>
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap">
                          <div class="text-sm text-gray-900">
                            <%= coupon.usedCount %> used
                          </div>
                          <% if (coupon.usageLimit > 0) { %>
                            <div class="text-xs text-gray-500">
                              Limit: <%= coupon.usageLimit %>
                            </div>
                          <% } %>
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap">
                          <div class="text-sm text-gray-900">
                            <%= new Date(coupon.startDate).toLocaleDateString() %>
                          </div>
                          <div class="text-xs text-gray-500">
                            to <%= new Date(coupon.endDate).toLocaleDateString() %>
                          </div>
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap">
                          <% 
                            const now = new Date();
                            const isExpired = new Date(coupon.endDate) < now;
                            const isNotStarted = new Date(coupon.startDate) > now;
                            const isLimitReached = coupon.usageLimit > 0 && coupon.usedCount >= coupon.usageLimit;
                          %>
                          <span class="px-2 py-1 text-xs rounded-full <%= 
                            !coupon.isActive ? 'bg-red-100 text-red-800' :
                            isExpired ? 'bg-gray-100 text-gray-800' :
                            isNotStarted ? 'bg-yellow-100 text-yellow-800' :
                            isLimitReached ? 'bg-orange-100 text-orange-800' :
                            'bg-green-100 text-green-800'
                          %>">
                            <%= 
                              !coupon.isActive ? 'Inactive' :
                              isExpired ? 'Expired' :
                              isNotStarted ? 'Scheduled' :
                              isLimitReached ? 'Limit Reached' :
                              'Active'
                            %>
                          </span>
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap text-sm">
                          <button 
                            onclick="openEditCouponModal('<%= JSON.stringify(coupon).replace(/'/g, '\\\'') %>')" 
                            class="text-indigo-600 hover:text-indigo-900 mr-3"
                          >
                            <i class="fas fa-edit"></i> Edit
                          </button>
                          <button 
                            onclick="deleteCoupon('<%= coupon._id %>')" 
                            class="text-red-600 hover:text-red-900"
                          >
                            <i class="fas fa-trash-alt"></i> Delete
                          </button>
                        </td>
                      </tr>
                    <% }) %>
                  <% } else { %>
                    <tr>
                      <td colspan="7" class="px-6 py-4 text-center text-gray-500">
                        No coupons found
                      </td>
                    </tr>
                  <% } %>
                </tbody>
              </table>
            </div>
          </div>
        </div>
      </main>
    </div>
  </div>
  
  <!-- New/Edit Coupon Modal -->
  <div id="couponModal" class="fixed inset-0 bg-gray-600 bg-opacity-50 hidden">
    <div class="flex items-center justify-center min-h-screen px-4">
      <div class="bg-white rounded-lg shadow-xl w-full max-w-md">
        <div class="px-6 py-4 border-b">
          <h3 id="modalTitle" class="text-lg font-medium text-gray-900"></h3>
        </div>
        
        <form id="couponForm" class="p-6">
          <input type="hidden" id="couponId" name="id">
          
          <div class="space-y-4">
            <div>
              <label for="code" class="block text-sm font-medium text-gray-700 mb-1">
                Coupon Code <span class="text-red-500">*</span>
              </label>
              <input 
                type="text" 
                id="code" 
                name="code" 
                required
                class="uppercase w-full px-4 py-2 rounded-lg border focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500"
              >
            </div>
            
            <div>
              <label for="type" class="block text-sm font-medium text-gray-700 mb-1">
                Discount Type <span class="text-red-500">*</span>
              </label>
              <select 
                id="type" 
                name="type" 
                required
                class="w-full px-4 py-2 rounded-lg border focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500"
                onchange="toggleMaxDiscount()"
              >
                <option value="percentage">Percentage</option>
                <option value="fixed">Fixed Amount</option>
              </select>
            </div>
            
            <div>
              <label for="value" class="block text-sm font-medium text-gray-700 mb-1">
                Discount Value <span class="text-red-500">*</span>
              </label>
              <input 
                type="number" 
                id="value" 
                name="value" 
                required
                min="0"
                step="0.01"
                class="w-full px-4 py-2 rounded-lg border focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500"
              >
            </div>
            
            <div id="maxDiscountField">
              <label for="maxDiscount" class="block text-sm font-medium text-gray-700 mb-1">
                Maximum Discount (₹)
              </label>
              <input 
                type="number" 
                id="maxDiscount" 
                name="maxDiscount" 
                min="0"
                step="0.01"
                class="w-full px-4 py-2 rounded-lg border focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500"
              >
            </div>
            
            <div>
              <label for="minPurchase" class="block text-sm font-medium text-gray-700 mb-1">
                Minimum Purchase Amount (₹)
              </label>
              <input 
                type="number" 
                id="minPurchase" 
                name="minPurchase" 
                min="0"
                step="0.01"
                class="w-full px-4 py-2 rounded-lg border focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500"
              >
            </div>
            
            <div>
              <label for="usageLimit" class="block text-sm font-medium text-gray-700 mb-1">
                Usage Limit (0 for unlimited)
              </label>
              <input 
                type="number" 
                id="usageLimit" 
                name="usageLimit" 
                min="0"
                class="w-full px-4 py-2 rounded-lg border focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500"
              >
            </div>
            
            <div class="grid grid-cols-2 gap-4">
              <div>
                <label for="startDate" class="block text-sm font-medium text-gray-700 mb-1">
                  Start Date <span class="text-red-500">*</span>
                </label>
                <input 
                  type="date" 
                  id="startDate" 
                  name="startDate" 
                  required
                  class="w-full px-4 py-2 rounded-lg border focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500"
                >
              </div>
              
              <div>
                <label for="endDate" class="block text-sm font-medium text-gray-700 mb-1">
                  End Date <span class="text-red-500">*</span>
                </label>
                <input 
                  type="date" 
                  id="endDate" 
                  name="endDate" 
                  required
                  class="w-full px-4 py-2 rounded-lg border focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500"
                >
              </div>
            </div>
            
            <div>
              <label class="flex items-center">
                <input 
                  type="checkbox" 
                  id="isActive" 
                  name="isActive" 
                  checked
                  class="h-4 w-4 text-indigo-600 focus:ring-indigo-500 border-gray-300 rounded"
                >
                <span class="ml-2 text-sm text-gray-700">Active</span>
              </label>
            </div>
          </div>
          
          <div class="mt-6 flex justify-end space-x-3">
            <button 
              type="button" 
              onclick="closeCouponModal()"
              class="px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-lg hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500"
            >
              Cancel
            </button>
            <button 
              type="submit"
              class="px-4 py-2 text-sm font-medium text-white bg-indigo-600 border border-transparent rounded-lg hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500"
            >
              Save Coupon
            </button>
          </div>
        </form>
      </div>
    </div>
  </div>
  
  <script>
    // Toggle max discount field based on discount type
    function toggleMaxDiscount() {
      const type = document.getElementById('type').value;
      const maxDiscountField = document.getElementById('maxDiscountField');
      maxDiscountField.style.display = type === 'percentage' ? 'block' : 'none';
    }
    
    // Modal functions
    function openNewCouponModal() {
      document.getElementById('modalTitle').textContent = 'Add New Coupon';
      document.getElementById('couponId').value = '';
      document.getElementById('couponForm').reset();
      document.getElementById('startDate').value = new Date().toISOString().split('T')[0];
      document.getElementById('endDate').value = new Date(Date.now() + 30*24*60*60*1000).toISOString().split('T')[0];
      toggleMaxDiscount();
      document.getElementById('couponModal').classList.remove('hidden');
    }
    
    function openEditCouponModal(couponJson) {
      const coupon = JSON.parse(couponJson);
      document.getElementById('modalTitle').textContent = 'Edit Coupon';
      document.getElementById('couponId').value = coupon._id;
      document.getElementById('code').value = coupon.code;
      document.getElementById('type').value = coupon.type;
      document.getElementById('value').value = coupon.value;
      document.getElementById('maxDiscount').value = coupon.maxDiscount || '';
      document.getElementById('minPurchase').value = coupon.minPurchase || '';
      document.getElementById('usageLimit').value = coupon.usageLimit || '';
      document.getElementById('startDate').value = new Date(coupon.startDate).toISOString().split('T')[0];
      document.getElementById('endDate').value = new Date(coupon.endDate).toISOString().split('T')[0];
      document.getElementById('isActive').checked = coupon.isActive;
      toggleMaxDiscount();
      document.getElementById('couponModal').classList.remove('hidden');
    }
    
    function closeCouponModal() {
      document.getElementById('couponModal').classList.add('hidden');
    }
    
    // Form submission
    document.getElementById('couponForm').addEventListener('submit', async function(e) {
      e.preventDefault();
      
      const formData = {
        id: document.getElementById('couponId').value,
        code: document.getElementById('code').value,
        type: document.getElementById('type').value,
        value: parseFloat(document.getElementById('value').value),
        maxDiscount: document.getElementById('maxDiscount').value ? parseFloat(document.getElementById('maxDiscount').value) : undefined,
        minPurchase: document.getElementById('minPurchase').value ? parseFloat(document.getElementById('minPurchase').value) : 0,
        usageLimit: document.getElementById('usageLimit').value ? parseInt(document.getElementById('usageLimit').value) : 0,
        startDate: document.getElementById('startDate').value,
        endDate: document.getElementById('endDate').value,
        isActive: document.getElementById('isActive').checked
      };
      
      try {
        const response = await fetch('/admin/coupons', {
          method: formData.id ? 'PUT' : 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify(formData),
        });
        
        const data = await response.json();
        
        if (data.success) {
          window.location.reload();
        } else {
          alert(data.message || 'An error occurred');
        }
      } catch (error) {
        console.error('Error:', error);
        alert('An error occurred while saving the coupon');
      }
    });
    
    // Delete coupon
    async function deleteCoupon(couponId) {
      if (confirm('Are you sure you want to delete this coupon?')) {
        try {
          const response = await fetch(`/admin/coupons/${couponId}`, {
            method: 'DELETE',
          });
          
          const data = await response.json();
          
          if (data.success) {
            window.location.reload();
          } else {
            alert(data.message || 'An error occurred');
          }
        } catch (error) {
          console.error('Error:', error);
          alert('An error occurred while deleting the coupon');
        }
      }
    }
  </script>
</body>
</html>