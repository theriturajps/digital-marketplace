<!DOCTYPE html>
<html lang="en">
<%- include('partials/head', { title }) %>
<body>
  <%- include('partials/header') %>
  
  <main class="container mx-auto px-4 py-8">
    <h1 class="text-2xl font-bold mb-6">Checkout</h1>
    
    <div class="lg:flex lg:space-x-8">
      <!-- Product Summary -->
      <div class="lg:w-1/2 mb-8 lg:mb-0">
        <div class="bg-white rounded-lg shadow-md p-6 mb-6">
          <h2 class="text-lg font-semibold mb-4">Order Summary</h2>
          
          <div class="flex items-start mb-4">
            <img 
              src="<%= product.image %>" 
              alt="<%= product.title %>" 
              class="w-20 h-20 object-cover rounded"
            >
            <div class="ml-4">
              <h3 class="font-medium"><%= product.title %></h3>
              <p class="text-sm text-gray-500"><%= product.category.name %> | <%= product.fileType.toUpperCase() %> | <%= product.fileSize %></p>
            </div>
          </div>
          
          <div class="border-t border-gray-200 pt-4">
            <div class="flex justify-between mb-2">
              <span>Price:</span>
              <span>₹<%= originalPrice.toFixed(2) %></span>
            </div>
            
            <div id="couponDiscountRow" class="flex justify-between mb-2 <%= couponDiscount > 0 ? '' : 'hidden' %>">
              <span>Coupon Discount:</span>
              <span id="couponDiscountValue" class="text-green-600">-₹<%= couponDiscount.toFixed(2) %></span>
            </div>
            
            <div class="flex justify-between font-bold text-lg">
              <span>Total:</span>
              <span id="finalPriceValue">₹<%= finalPrice.toFixed(2) %></span>
            </div>
          </div>
        </div>
        
        <!-- Coupon Code -->
        <div class="bg-white rounded-lg shadow-md p-6">
          <h2 class="text-lg font-semibold mb-4">Apply Coupon</h2>
          
          <div class="flex">
            <input 
              type="text" 
              id="couponCode" 
              placeholder="Enter coupon code" 
              class="w-full px-4 py-2 rounded-l border focus:ring-indigo-500 focus:border-indigo-500"
              value="<%= couponCode %>"
            >
            <button 
              type="button" 
              id="applyCouponBtn" 
              class="bg-indigo-600 hover:bg-indigo-700 text-white px-4 py-2 rounded-r transition duration-200"
            >
              Apply
            </button>
          </div>
          
          <div id="couponMessage" class="mt-2 text-sm"></div>
        </div>
      </div>
      
      <!-- Checkout Form -->
      <div class="lg:w-1/2">
        <div class="bg-white rounded-lg shadow-md p-6">
          <h2 class="text-lg font-semibold mb-4">Contact Information</h2>
          
          <form id="checkoutForm">
            <div class="mb-4">
              <label for="email" class="block text-sm font-medium text-gray-700 mb-1">Email Address <span class="text-red-500">*</span></label>
              <input 
                type="email" 
                id="email" 
                name="email" 
                required 
                class="w-full px-4 py-2 rounded border focus:ring-indigo-500 focus:border-indigo-500"
                placeholder="your@email.com"
              >
              <p class="mt-1 text-xs text-gray-500">We'll send the download links to this email</p>
            </div>
            
            <div class="mb-6">
              <label for="phone" class="block text-sm font-medium text-gray-700 mb-1">Phone Number (Optional)</label>
              <input 
                type="tel" 
                id="phone" 
                name="phone" 
                class="w-full px-4 py-2 rounded border focus:ring-indigo-500 focus:border-indigo-500"
                placeholder="Your phone number"
              >
            </div>
            
            <button 
              type="button" 
              id="payNowBtn" 
              class="w-full bg-indigo-600 hover:bg-indigo-700 text-white font-medium py-3 px-6 rounded-lg transition duration-200"
            >
              Pay Now ₹<span id="payButtonAmount"><%= finalPrice.toFixed(2) %></span>
            </button>
          </form>
        </div>
      </div>
    </div>
  </main>
  
  <%- include('partials/footer') %>
  
  <!-- Razorpay Script -->
  <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
  
  <script>
    document.addEventListener('DOMContentLoaded', function() {
      // Variables
      const productId = '<%= product._id %>';
      const originalPrice = <%= originalPrice %>;
      let finalPrice = <%= finalPrice %>;
      let appliedCoupon = '<%= couponCode %>';
      let couponDiscount = <%= couponDiscount %>;
      
      // Apply Coupon
      document.getElementById('applyCouponBtn').addEventListener('click', async function() {
        const couponCode = document.getElementById('couponCode').value.trim();
        const couponMessage = document.getElementById('couponMessage');
        
        if (!couponCode) {
          couponMessage.textContent = 'Please enter a coupon code';
          couponMessage.className = 'mt-2 text-sm text-red-600';
          return;
        }
        
        try {
          couponMessage.textContent = 'Checking coupon...';
          couponMessage.className = 'mt-2 text-sm text-gray-600';
          
          const response = await fetch('/checkout/apply-coupon', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify({
              couponCode,
              productId
            }),
          });
          
          const data = await response.json();
          
          if (data.success) {
            appliedCoupon = data.coupon.code;
            couponDiscount = data.coupon.discount;
            finalPrice = data.coupon.finalPrice;
            
            // Update UI
            document.getElementById('couponDiscountRow').classList.remove('hidden');
            document.getElementById('couponDiscountValue').textContent = `-₹${couponDiscount.toFixed(2)}`;
            document.getElementById('finalPriceValue').textContent = `₹${finalPrice.toFixed(2)}`;
            document.getElementById('payButtonAmount').textContent = finalPrice.toFixed(2);
            
            couponMessage.textContent = `Coupon "${appliedCoupon}" applied successfully!`;
            couponMessage.className = 'mt-2 text-sm text-green-600';
          } else {
            couponMessage.textContent = data.message;
            couponMessage.className = 'mt-2 text-sm text-red-600';
          }
        } catch (error) {
          console.error('Error applying coupon:', error);
          couponMessage.textContent = 'An error occurred. Please try again.';
          couponMessage.className = 'mt-2 text-sm text-red-600';
        }
      });
      
      // Pay Now Button
      document.getElementById('payNowBtn').addEventListener('click', async function() {
        const email = document.getElementById('email').value.trim();
        const phone = document.getElementById('phone').value.trim();
        
        if (!email) {
          alert('Please enter your email address');
          return;
        }
        
        if (email && !isValidEmail(email)) {
          alert('Please enter a valid email address');
          return;
        }
        
        try {
          // Create order
          const orderResponse = await fetch('/checkout/create-order', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify({
              productId,
              email,
              phone,
              couponCode: appliedCoupon
            }),
          });
          
          const orderData = await orderResponse.json();
          
          if (!orderData.success) {
            alert(orderData.message || 'An error occurred. Please try again.');
            return;
          }
          
          // Initialize Razorpay
          const options = {
            key: '<%= razorpayKeyId %>',
            amount: orderData.order.amount,
            currency: orderData.order.currency,
            name: 'Digital Marketplace',
            description: `Purchase of ${orderData.product.name}`,
            order_id: orderData.order.id,
            handler: async function(response) {
              try {
                // Verify payment
                const verifyResponse = await fetch('/checkout/verify-payment', {
                  method: 'POST',
                  headers: {
                    'Content-Type': 'application/json',
                  },
                  body: JSON.stringify({
                    razorpayOrderId: response.razorpay_order_id,
                    razorpayPaymentId: response.razorpay_payment_id,
                    razorpaySignature: response.razorpay_signature,
                    productId,
                    email,
                    phone,
                    couponCode: appliedCoupon
                  }),
                });
                
                const verifyData = await verifyResponse.json();
                
                if (verifyData.success) {
                  window.location.href = `/orders/lookup?success=true&orderId=${verifyData.orderId}`;
                } else {
                  alert(verifyData.message || 'Payment verification failed. Please contact support.');
                }
              } catch (error) {
                console.error('Payment verification error:', error);
                alert('An error occurred during payment verification. Please contact support.');
              }
            },
            prefill: {
              email: email,
              contact: phone
            },
            theme: {
              color: '#4f46e5'
            }
          };
          
          const razorpay = new Razorpay(options);
          razorpay.open();
          
        } catch (error) {
          console.error('Checkout error:', error);
          alert('An error occurred. Please try again.');
        }
      });
      
      // Helper function to validate email
      function isValidEmail(email) {
        const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
        return re.test(String(email).toLowerCase());
      }
    });
  </script>
  
  <%- include('partials/scripts') %>
</body>
</html>